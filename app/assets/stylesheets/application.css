/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the top of the
 * compiled file, but it's generally better to create a new file per style scope.
 *
 *= require_self
 *= require_tree .
 *= require bootstrap/bootstrap.min
 * *= require bootstrap/jquery.rating
 */

.feedback{
display: block;
height: 0 auto;
width: 100%;
background: #000;
border-radius: 6px;
color: grey;
padding: 30px 10px;
font-size: 18px;
    }
.feedback img{
border-radius:10px;
}

.feedback.batman{
color :yellow;
background-color: #000;
    }

.feedback.wildstyle{
color:white;
background-color: #E90404;
    }

.feedback.emmet{
color:white;
background-color: #0053CF	;
    }
    
    
    

body 
{
    margin: 0px;
    -webkit-user-select: none;
}


/* Styles the "Card Flip" page and creates a placeholder for the card */
#container
{
    /* Set these dimensions so the card can be properly displayed in Safari on iPhone */
    height: 120px;
    width: 120px;
    /* Disable tap highlighting */
    -webkit-tap-highlight-color: rgba(0,0,0,0);
    
    /* Give some depth to the card */
    -webkit-perspective: 600;
}


/* Applies 3D transform and transition effects to the card. The card has two states: regular and flipped.
   A card is in a regular state when there is an empty transform applied to it, and otherwise in a flipped
   state, where there is a rotational transformation applied. This class is used when the card is in the regular state.
   The "card flipped" class is used when the card is in the flipped state. 
*/
.card 
{
    position: absolute;
    height: 100px;
    width: 100px;
    
    /* Ensure that the card lives correctly in 3D space */
    -webkit-transform-style: preserve-3d;
    
    /* We apply this property to the card so it can smoothly flip between its sides */
    -webkit-transition-property: -webkit-transform;
    /* Make the animation occur over a period of 1.5 seconds */
    -webkit-transition-duration: 1.5s;
}


/* Applies the flip animation to the card */
.card.flipped
{

    /* Rotate the card 180 degrees along the y-axis. This animation allows the card to
      toggle between its regular and flipped states. */
    -webkit-transform: rotateY(180deg);
}


/* Styles the card and hides its "back side" when the card is flipped */
.face 
{
    position: absolute;
    height: 100px;
    width: 100px;
    /* Give a round layout to the card */
    -webkit-border-radius: 10px;
    /* Drop shadow around the card */
    -webkit-box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.5);
    /* Make sure that users will not be able to select anything on the card */
    
    /* We create the card by stacking two div elements at the exact same location. The back of the card 
       is shown when we rotated the card 180 degrees along the y-axis. Setting this property to hidden
       ensures that the "back side" is hidden when the card is flipped
    */
    -webkit-backface-visibility: hidden;
}

/* Styles the suit characters */
.face > p 
{
    margin-top: 36px;
    margin-bottom: 0;
    text-align: center;
    font-size: 92px;
}


/* Styles the front of the card */
.front 
{
    /* Set the color of the suit characters on the card */
    color: rgb(78,150,249);
    /* Background color of this side of the card */
    background-color: rgb(34,65,108);
}


/* Styles the back of the card */
.back 
{
    color: rgb(34,65,108);
    background-color: rgba(78,150,249,0.5);
    
    /* Ensure the "back side" is flipped already */
    -webkit-transform: rotateY(180deg);
}

#container
        {
             -webkit-perspective: 1000px;
         -moz-perspective: 1000px;
           -o-perspective: 1000px;
              perspective: 1000px;
              float: right;
        }
        #card img {

          height: 100px;
          width: 100px;
        }
        
        #card
        {
    
     
      -webkit-transform-style: preserve-3d;
         -moz-transform-style: preserve-3d;
           -o-transform-style: preserve-3d;
              transform-style: preserve-3d;
      -webkit-transition: -webkit-transform 1s;
         -moz-transition: -moz-transform 1s;
           -o-transition: -o-transform 1s;
              transition: transform 1s;
    
        }
        
        #card div { -moz-backface-visibility: hidden; }
        
        #card .front  {
      -webkit-transform: translateZ( 100px );
         -moz-transform: translateZ( 100px );
           -o-transform: translateZ( 100px );
              transform: translateZ( 100px );
    }
    #card .back   {
      -webkit-transform: rotateX( -180deg ) translateZ( 100px );
         -moz-transform: rotateX( -180deg ) translateZ( 100px );
           -o-transform: rotateX( -180deg ) translateZ( 100px );
              transform: rotateX( -180deg ) translateZ( 100px );
    }
    #card .right {
      -webkit-transform: rotateY(   90deg ) translateZ( 100px );
         -moz-transform: rotateY(   90deg ) translateZ( 100px );
           -o-transform: rotateY(   90deg ) translateZ( 100px );
              transform: rotateY(   90deg ) translateZ( 100px );
    }
    
    #card.show-front {
      -webkit-transform: translateZ( -100px );
         -moz-transform: translateZ( -100px );
           -o-transform: translateZ( -100px );
              transform: translateZ( -100px );
    }
    #card.show-back {
      -webkit-transform: translateZ( -100px ) rotateX( -180deg );
         -moz-transform: translateZ( -100px ) rotateX( -180deg );
           -o-transform: translateZ( -100px ) rotateX( -180deg );
              transform: translateZ( -100px ) rotateX( -180deg );
    }
    #card.show-right {
      -webkit-transform: translateZ( -100px ) rotateY(  -90deg );
         -moz-transform: translateZ( -100px ) rotateY(  -90deg );
           -o-transform: translateZ( -100px ) rotateY(  -90deg );
              transform: translateZ( -100px ) rotateY(  90deg );
    }


